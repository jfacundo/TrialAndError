SQUARE ROOT / CUBE ROOT
1.) Java
public static double cubeRoot(double x) {
  return Math.pow(x, 1.0/3);
}

2.) Algorithm
double SqrtMethod3(double n)  //Newton-Raphson method
{
    double x,i,precision=0.0001;
    x=1
    if(x*x==n)
        return x;
    while((n-x*x)>precision || (x*x-n)>precision)
        x=(x+n/x)/2;
    return x;
}

==
FIBONACCI (Recursive)
public class MainClass {
  // recursive declaration of method fibonacci
  public static long fibonacci(long number) {
    if ((number == 0) || (number == 1)) // base cases
      return number;
    else
      // recursion step
      return fibonacci(number - 1) + fibonacci(number - 2);
  }

  public static void main(String[] args) {
    for (int counter = 0; counter <= 10; counter++)
      System.out.printf("Fibonacci of %d is: %d\n", counter, fibonacci(counter));
  }
}

FIBONACCI (LOOP)
public static int fibonacciLoop(int number){
        if(number == 1 || number == 2){
            return 1;
        }
        int fibo1=1, fibo2=1, fibonacci=1;
        for(int i= 3; i<= number; i++){
            fibonacci = fibo1 + fibo2; //Fibonacci number is sum of previous two Fibonacci number
            fibo1 = fibo2;
            fibo2 = fibonacci;
 
        }
        return fibonacci; //Fibonacci number
    }     